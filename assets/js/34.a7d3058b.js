(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{594:function(t,s,e){"use strict";e.r(s);var a=e(5),_=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"盒模型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#盒模型"}},[t._v("#")]),t._v(" 盒模型")]),t._v(" "),e("h2",{attrs:{id:"_1、基本概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、基本概念"}},[t._v("#")]),t._v(" 1、基本概念")]),t._v(" "),e("p",[t._v("在 CSS 中任何元素都可以看成是一个盒子。")]),t._v(" "),e("p",[t._v("一个盒子是由 4 部分组成的：内容（content）、内边距（padding）、边框（border）和外边距（margin）。")]),t._v(" "),e("div",{staticClass:"language-css line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200px"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200px"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("padding")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 10px"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1px solid #eee"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("margin")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 10px"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("h2",{attrs:{id:"_2、两种模型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、两种模型"}},[t._v("#")]),t._v(" 2、两种模型")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("标准盒模型（W3C）：盒子的实际尺寸 = 内容（设置的宽/高） + 内边距 + 边框")]),t._v(" "),e("ul",[e("li",[e("code",[t._v(".box")]),t._v(" 元素内容的宽度就为 "),e("code",[t._v("200px")]),t._v("，而实际的宽度则是 "),e("code",[t._v("width")]),t._v(" + "),e("code",[t._v("padding-left")]),t._v(" + "),e("code",[t._v("padding-right")]),t._v(" + "),e("code",[t._v("border-left-width")]),t._v(" + "),e("code",[t._v("border-right-width")]),t._v(" = 200 + 10 + 10 + 1 + 1 = 222。")])])]),t._v(" "),e("li",[e("p",[t._v("IE 盒模型（IExplore）：盒子的实际尺寸 = 设置的宽/高 = 内容 + 内边距 + 边框")]),t._v(" "),e("ul",[e("li",[e("code",[t._v(".box")]),t._v(" 元素所占用的实际宽度为 "),e("code",[t._v("200px")]),t._v("，而内容的真实宽度则是 "),e("code",[t._v("width")]),t._v(" - "),e("code",[t._v("padding-left")]),t._v(" - "),e("code",[t._v("padding-right")]),t._v(" - "),e("code",[t._v("border-left-width")]),t._v(" - "),e("code",[t._v("border-right-width")]),t._v(" = 200 - 10 - 10 - 1 - 1 = 178。")])])])]),t._v(" "),e("p",[e("strong",[t._v("设置")]),t._v("：")]),t._v(" "),e("div",{staticClass:"language-css line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 标准模型 - 默认 */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("box-sizing")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" content-box"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*IE模型*/")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("box-sizing")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" border-box"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("h2",{attrs:{id:"_3、js-获取盒模型宽高"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3、js-获取盒模型宽高"}},[t._v("#")]),t._v(" 3、JS 获取盒模型宽高")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("dom.style.width/height")]),t._v(" "),e("ul",[e("li",[t._v("只能获取 "),e("strong",[t._v("内联")]),t._v("样式 的宽高，获取不到 "),e("strong",[t._v("style 标签")]),t._v(" 或 "),e("strong",[t._v("外联")]),t._v("CSS 的宽高")])])]),t._v(" "),e("li",[e("code",[t._v("dom.currentStyle.width/height")]),t._v(" "),e("ul",[e("li",[t._v("获取 "),e("strong",[t._v("页面渲染完成后")]),t._v(" dom 的宽高（不论样式在哪定义）。缺点：只有 "),e("strong",[t._v("IE")]),t._v(" 浏览器支持。")])])]),t._v(" "),e("li",[e("code",[t._v("window.getComputedStyle(dom).width/height")]),t._v(" "),e("ul",[e("li",[t._v("原理同上，这个兼容性，通用性更好")])])]),t._v(" "),e("li",[e("code",[t._v("dom.getBoundingClientRect().width/height")]),t._v(" "),e("ul",[e("li",[t._v("根据元素（左上角）在视窗中的绝对位置来获取宽高的：content+padding+border")])])]),t._v(" "),e("li",[e("code",[t._v("dom.offsetWidth/offsetHeight")]),t._v(" "),e("ul",[e("li",[t._v("dom 对象的可见宽度，包含 content + padding + border，默认单位 p")])])])]),t._v(" "),e("h2",{attrs:{id:"_4、根据盒模型解释边距重叠"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4、根据盒模型解释边距重叠"}},[t._v("#")]),t._v(" 4、根据盒模型解释边距重叠")]),t._v(" "),e("p",[t._v("当两个外边距相遇时，他们将形成一个外边距，合并后的外边距高度等于两个发生合并的外边距的高度中的较大者。")]),t._v(" "),e("p",[t._v("规则：正正取最大，负负取最负，正负就相加。")]),t._v(" "),e("p",[t._v("浮动的元素和绝对定位这种脱离文档流的元素的外边距不会折叠。重叠只会出现在垂直方向。")]),t._v(" "),e("p",[t._v("一般有三种情况：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("父子元素边距合并")]),t._v(" "),e("ul",[e("li",[t._v("原因：一个盒子如果没有添加 "),e("code",[t._v("BFC")]),t._v("，那么它的上边距应该和其文档流中的第一个子元素的上边距重叠。")]),t._v(" "),e("li",[t._v("解决： 通过给父容器添加"),e("code",[t._v("overflow: hidden")]),t._v(" 属性，使之成为 "),e("code",[t._v("BFC")]),t._v(" 。")])])]),t._v(" "),e("li",[e("p",[t._v("兄弟元素边距重叠")]),t._v(" "),e("ul",[e("li",[t._v("原因：块级元素的上外边距或下外边距有时（直接接触/相邻时）会合并为一个外边距。")]),t._v(" "),e("li",[t._v("解决：通过给其中一个兄弟元素添加父容器并添加"),e("code",[t._v("overflow: hidden")]),t._v(" 属性，使之成为 "),e("code",[t._v("BFC")]),t._v(" 。")])])]),t._v(" "),e("li",[e("p",[t._v("空元素边距合并")]),t._v(" "),e("ul",[e("li",[t._v("原因：如果一个块级元素没有任何内容并且设置了 "),e("code",[t._v("margin-top")]),t._v(" 和 "),e("code",[t._v("margin-bottom")]),t._v(" 时会发生 "),e("code",[t._v("margin")]),t._v(" 合并。")]),t._v(" "),e("li",[t._v("解决：给每一个空元素添加父容器并添加 "),e("code",[t._v("overflow: hidden")]),t._v(" 属性，使之成为 "),e("code",[t._v("BFC")]),t._v(" 。")])])])]),t._v(" "),e("h2",{attrs:{id:"_5、各种宽高"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5、各种宽高"}},[t._v("#")]),t._v(" 5、各种宽高")]),t._v(" "),e("p",[t._v("clientHeigh = height + 上下 padding （可视内容）")]),t._v(" "),e("p",[t._v("offsetHeith = height + 上下 padding + 上下 boder （控件元素）")]),t._v(" "),e("p",[t._v("scrollHeight = 可视区域宽度 + 被隐藏区域宽度 （实际内容）")]),t._v(" "),e("p",[t._v("clientTop = boder.top (上边框的宽度)")]),t._v(" "),e("p",[t._v("offsetTop = 当前元素上边框外边缘到最近的已定位父级（offsetParent）上边框内边缘的距离。如果父级都没有定位，则到 body 顶部的距离。")]),t._v(" "),e("p",[t._v("scrollTop：内容层顶部到可视区域顶部的距离（滑出可视区距离）")])])}),[],!1,null,null,null);s.default=_.exports}}]);