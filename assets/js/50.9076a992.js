(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{611:function(v,_,t){"use strict";t.r(_);var a=t(5),e=Object(a.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"bom"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bom"}},[v._v("#")]),v._v(" BOM")]),v._v(" "),t("h2",{attrs:{id:"_1、bom-概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、bom-概念"}},[v._v("#")]),v._v(" 1、BOM 概念")]),v._v(" "),t("p",[t("strong",[v._v("BOM")]),v._v("：")]),v._v(" "),t("p",[v._v("浏览器对象模型，提供操作浏览器的属性和方法。")]),v._v(" "),t("p",[v._v("BOM 由一系列相关的对象构成，并且每个对象都提供了很多属性和方法，其核心对象是 window。")]),v._v(" "),t("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/9/10/16d191f327978675~tplv-t2oaga2asx-watermark.awebp",alt:"img"}}),v._v(" "),t("h2",{attrs:{id:"_2、window"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、window"}},[v._v("#")]),v._v(" 2、window")]),v._v(" "),t("p",[v._v("window 是 BOM 的核心对象，表示浏览器的一个实例。")]),v._v(" "),t("p",[t("strong",[v._v("双重角色")]),v._v("：既是通过 js 访问浏览器窗口的一个接口；又是 ECMAScript 规定的 Global 对象。")]),v._v(" "),t("h4",{attrs:{id:"_1-全局作用域"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-全局作用域"}},[v._v("#")]),v._v(" 1）全局作用域")]),v._v(" "),t("ul",[t("li",[v._v("所有在全局作用域中声明的变量、函数都会变成 window 对象的属性和方法。")]),v._v(" "),t("li",[v._v("定义全局变量与在 window 对象上直接定义属性的区别：全局变量不能通过 delete 操作符删除，而直接在 window 对象上的定义的属性可以。\n"),t("ul",[t("li",[v._v("全局变量不能通过 delete 操作符删除"),t("strong",[v._v("原因")]),v._v("：使用 var 语句添加的 window 属性有一个名为 [[Configurable]] 的特性，这个特性的值被设置为 false，因此这样定义的属性不可以通过 delete 操作符删除。")])])]),v._v(" "),t("li",[v._v("尝试访问未声明的变量会抛出错误，但是通过查询 window 对象，可以知道某个可能未声明的变量是否存在。")])]),v._v(" "),t("h4",{attrs:{id:"_2-窗口关系及框架"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-窗口关系及框架"}},[v._v("#")]),v._v(" 2）窗口关系及框架")]),v._v(" "),t("ul",[t("li",[v._v("如果页面中包含框架，则每个框架都拥有自己的 window 对象，通过以下几种方法访问相应的 window 对象。\n"),t("ul",[t("li",[v._v("window.frames[序号]")]),v._v(" "),t("li",[v._v("window.frames[name]")]),v._v(" "),t("li",[v._v("top.frames[序号] // top 对象始终指向最高（最外）层的框架。")]),v._v(" "),t("li",[v._v("top.frames[name]")]),v._v(" "),t("li",[v._v("frames[序号]")]),v._v(" "),t("li",[v._v("frames[name]")])])]),v._v(" "),t("li",[v._v("parent 对象始终指向当前框架的直接上层框架。")]),v._v(" "),t("li",[v._v("self 对象始终指向 window。")]),v._v(" "),t("li",[v._v("所有这些对象都是 window 对象的属性。")])]),v._v(" "),t("h4",{attrs:{id:"_3-窗口位置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-窗口位置"}},[v._v("#")]),v._v(" 3）窗口位置")]),v._v(" "),t("p",[v._v("确定 window 对象位置的属性")]),v._v(" "),t("ul",[t("li",[v._v("screenLeft // 窗口相对于屏幕左边")]),v._v(" "),t("li",[v._v("screenTop // 窗口相对于屏幕上边")]),v._v(" "),t("li",[v._v("screenX")]),v._v(" "),t("li",[v._v("screenY")])]),v._v(" "),t("p",[v._v("修改 window 对象位置的方法")]),v._v(" "),t("ul",[t("li",[v._v("moveTo() // 接收的是新位置的 x 和 y 坐标值")]),v._v(" "),t("li",[v._v("moveBy() // 接收的是在水平和垂直方向上移动的像素数")])]),v._v(" "),t("h4",{attrs:{id:"_4-窗口大小"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-窗口大小"}},[v._v("#")]),v._v(" 4）窗口大小")]),v._v(" "),t("p",[v._v("确定一个窗口的大小")]),v._v(" "),t("ul",[t("li",[v._v("innerWidth、innerHeight // 该容器中页面视图区的大小（减去边框宽度）")]),v._v(" "),t("li",[v._v("outerWidth 、outerHeight // 浏览器窗口本身的尺寸")])]),v._v(" "),t("p",[v._v("调整浏览器窗口的大小")]),v._v(" "),t("ul",[t("li",[v._v("resizeTo() // 接收浏览器窗口的新宽度和新高度")]),v._v(" "),t("li",[v._v("resizeBy() // 接收新窗口与原窗口的宽度和高度之差")])]),v._v(" "),t("h4",{attrs:{id:"_5-导航和打开窗口"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-导航和打开窗口"}},[v._v("#")]),v._v(" 5）导航和打开窗口")]),v._v(" "),t("ul",[t("li",[v._v("window.open() // 导航到一个特定的 URL 或 打开一个新的浏览器窗口\n"),t("ul",[t("li",[v._v("接收 4 个参数：要加载的 URL、窗口目标、一个特性字符串以及一个表示新页面是否取代浏览器历史记录中当前加载页面的布尔值")]),v._v(" "),t("li",[v._v("通常只须传递第一个参数，最后一个参数只在不打开新窗口的情况下使用。")]),v._v(" "),t("li",[v._v("第三个参数是一个逗号分隔的设置字符串，表示在新窗口中都显示哪些特性。")]),v._v(" "),t("li",[v._v("该方法返回一个指向新窗口的引用。")])])])]),v._v(" "),t("h4",{attrs:{id:"_6-间歇调用和超时调用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-间歇调用和超时调用"}},[v._v("#")]),v._v(" 6）间歇调用和超时调用")]),v._v(" "),t("p",[v._v("JavaScript 是单线程语言，但它允许通过设置"),t("strong",[v._v("超时值")]),v._v("和"),t("strong",[v._v("间歇时间值")]),v._v("来调度代码在特定的时刻执行。")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("超时调用 setTimeout()")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("它接受两个参数：要执行的代码（字符串或函数）和以毫秒表示的时间（即在执行代码前需要等待多少毫秒）。")])]),v._v(" "),t("li",[t("p",[v._v("第二个参数告诉 js 再过多长时间把当前任务添加到队列中。")]),v._v(" "),t("ul",[t("li",[v._v("该方法会返回一个超时调用 ID。clearTimeout() 方法，将相应的超时调用 ID 作为参数传递给它，来取消超时调用。")])])])])]),v._v(" "),t("li",[t("p",[v._v("间歇调用 setInterval()")]),v._v(" "),t("ul",[t("li",[v._v("它接受两个参数：要执行的代码（字符串或函数）和每次执行之前需要等待的毫秒数。")]),v._v(" "),t("li",[v._v("该方法会返回一个间歇调用 ID。clearInterval() 方法，传入相应的间歇调用 ID，来取消间歇调用。")]),v._v(" "),t("li",[v._v("取消间歇调用的重要性要远远高于取消超时调用。")])])])]),v._v(" "),t("h4",{attrs:{id:"_7-系统对话框"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-系统对话框"}},[v._v("#")]),v._v(" 7）系统对话框")]),v._v(" "),t("p",[v._v("调用系统对话框向用户显示消息。")]),v._v(" "),t("ul",[t("li",[v._v("alert()")]),v._v(" "),t("li",[v._v("confirm()")]),v._v(" "),t("li",[v._v("prompt()")])]),v._v(" "),t("h2",{attrs:{id:"_3、history"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、history"}},[v._v("#")]),v._v(" 3、history")]),v._v(" "),t("p",[v._v("history 对象保存着用户上网的"),t("strong",[v._v("历史记录")]),v._v("，从窗口被打开的那一刻算起。")]),v._v(" "),t("ul",[t("li",[v._v("go()\n"),t("ul",[t("li",[v._v("接受一个参数，表示向后或向前跳转的页面数的一个整数值。负数-后退，正数-前进。")]),v._v(" "),t("li",[v._v("也可以传递一个字符串参数。此时浏览器会跳转到历史记录中包含该字符串的第一个位置——可能后退，也可能前进，具体要看哪个位置最近。")])])]),v._v(" "),t("li",[v._v("back() // 后退一页")]),v._v(" "),t("li",[v._v("forward() // 前进一页")]),v._v(" "),t("li",[v._v("length // 保存着历史记录的数量\n"),t("ul",[t("li",[v._v("history.length == 0 // 检测当前页面是不是用户历史记录中的第一个页面")])])]),v._v(" "),t("li",[v._v("pushState(state, title, url) // 添加一条历史记录，不刷新页面")]),v._v(" "),t("li",[v._v("replaceState(state, title, url) // 替换当前的历史记录，不刷新页面")])]),v._v(" "),t("h2",{attrs:{id:"_4、location"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4、location"}},[v._v("#")]),v._v(" 4、location")]),v._v(" "),t("p",[v._v("location 提供了与当前窗口中加载的文档有关的信息，还提供了一些"),t("strong",[v._v("导航")]),v._v("功能。location 将 URL 解析为独立的片段，让开发人员可以通过不同的属性访问这些片段。")]),v._v(" "),t("p",[v._v("它既是 window 对象的属性，也是 document 对象的属性。")]),v._v(" "),t("p",[t("code",[v._v("http://127.0.0.1:5501/html/index.html?id=123#test")])]),v._v(" "),t("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/10/1733658d90833f5b~tplv-t2oaga2asx-watermark.awebp",alt:"Location Object"}}),v._v(" "),t("p",[t("strong",[v._v("属性")]),v._v("：")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("属性")]),v._v(" "),t("th",[v._v("描述")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("hash")]),v._v(" "),t("td",[v._v("#test")])]),v._v(" "),t("tr",[t("td",[v._v("host")]),v._v(" "),t("td",[v._v("127.0.0.1:5501")])]),v._v(" "),t("tr",[t("td",[v._v("hostname")]),v._v(" "),t("td",[v._v("127.0.0.1")])]),v._v(" "),t("tr",[t("td",[v._v("href")]),v._v(" "),t("td",[v._v("http://127.0.0.1:5501/html/index.html?id=123#test")])]),v._v(" "),t("tr",[t("td",[v._v("origin")]),v._v(" "),t("td",[v._v("http://127.0.0.1:5501")])]),v._v(" "),t("tr",[t("td",[v._v("pathname")]),v._v(" "),t("td",[v._v("/html/index.html")])]),v._v(" "),t("tr",[t("td",[v._v("port")]),v._v(" "),t("td",[v._v("5501")])]),v._v(" "),t("tr",[t("td",[v._v("protocol")]),v._v(" "),t("td",[v._v("http:")])]),v._v(" "),t("tr",[t("td",[v._v("search")]),v._v(" "),t("td",[v._v("?id=123")])])])]),v._v(" "),t("p",[v._v("除了 "),t("code",[v._v("origin")]),v._v(" 是个只读属性不可修改外，其余的属性都是可读写。")]),v._v(" "),t("p",[v._v("每次修改"),t("code",[v._v("location")]),v._v(" 的属性("),t("code",[v._v("hash")]),v._v("除外)，页面都会以新 URL 重新加载。")]),v._v(" "),t("p",[t("strong",[v._v("方法")]),v._v("：")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("方法")]),v._v(" "),t("th",[v._v("描述")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("assign")]),v._v(" "),t("td",[v._v("加载新页面")])]),v._v(" "),t("tr",[t("td",[v._v("reload")]),v._v(" "),t("td",[v._v("重加载当前页面")])]),v._v(" "),t("tr",[t("td",[v._v("replace")]),v._v(" "),t("td",[v._v("用一个新页面代替当前页面")])])])]),v._v(" "),t("p",[t("code",[v._v("reload")]),v._v("方法：参数是一个可选的布尔类型，不填默认为"),t("code",[v._v("false")]),v._v("，表示可能从缓存中读取当前页面刷新，相当于普通的 F5 刷新，"),t("code",[v._v("true")]),v._v("表示强制浏览器从服务器去重新获取页面资源。")]),v._v(" "),t("p",[t("code",[v._v("assign")]),v._v(" 和 "),t("code",[v._v("replace")]),v._v(" ：这两个方法都需要传入一个参数，表示新页面的地址。区别在于，使用了 "),t("code",[v._v("assign")]),v._v(" 后，会在浏览器的历史记录中留下之前老页面的地址，当我们在新页面点击回退键的时候还可以回到之前的页面。而 "),t("code",[v._v("replace")]),v._v(" 则是使用新页面的地址替换老页面的地址，此时再点击回退按钮就回不到我们之前的页面去了。")]),v._v(" "),t("h2",{attrs:{id:"_5、navigator"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5、navigator"}},[v._v("#")]),v._v(" 5、navigator")]),v._v(" "),t("p",[v._v("navigator 对象包含有关浏览器的信息，通常用于检测显示网页的"),t("strong",[v._v("浏览器")]),v._v("类型。")]),v._v(" "),t("p",[t("strong",[v._v("属性")]),v._v("：")]),v._v(" "),t("ul",[t("li",[t("p",[t("code",[v._v("Navigator.useragent")]),v._v("返回浏览器的 User Agent 字符串，表示浏览器的厂商和版本信息。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("Navigator.plugins")]),v._v("返回一个类数组对象，成员是 Plugin 实例对象，表示浏览器安装的插件。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("Navigator.platform")]),v._v("返回用户的操作系统信息。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("Navigator.onLine")]),v._v("返回一个布尔值，表示用户当前在线还是离线（浏览器断线）。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("Navigator.language")]),v._v("返回一个表示浏览器首选语言的字符串，"),t("code",[v._v("Navigator.languages")]),v._v("返回表示用户可以接受的语言的类数组对象")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("Navigator.geolocation")]),v._v("返回一个 Geolocation 对象，包含用户地理位置的信息。注意，该 API 只有在 HTTPS 协议下可用。注意，调用下面三个方法时，浏览器会跳出一个对话框，要求用户给予授权。")]),v._v(" "),t("ul",[t("li",[t("code",[v._v("Geolocation.getCurrentPositon()")]),v._v("：得到用户的当前位置")]),v._v(" "),t("li",[t("code",[v._v("Geolocation.watchPosition()")]),v._v("：监听用户位置变化")]),v._v(" "),t("li",[t("code",[v._v("Geolocation.clearWatch()")]),v._v("取消上面方法指定的监听函数")])])]),v._v(" "),t("li",[t("p",[t("code",[v._v("Navigator.cookieEnabled")]),v._v("返回一个布尔值，表示浏览器的 Cookie 功能是否打开。")])])]),v._v(" "),t("p",[t("strong",[v._v("方法")]),v._v("：")]),v._v(" "),t("ul",[t("li",[t("code",[v._v("Navigator.javaEnabled()")]),v._v("返回一个布尔值，表示浏览器是否能运行 Java Applet 小程序")]),v._v(" "),t("li",[t("code",[v._v("Navigator.sendBeacon()")]),v._v("用于向服务器异步发送数据")])]),v._v(" "),t("h2",{attrs:{id:"_6、screen"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6、screen"}},[v._v("#")]),v._v(" 6、screen")]),v._v(" "),t("p",[v._v("screen 对象表示当前窗口所在的屏幕，提供显示设备的信息，这些信息一般只用于站点分析。")]),v._v(" "),t("p",[t("strong",[v._v("属性")]),v._v("：")]),v._v(" "),t("ul",[t("li",[t("code",[v._v("Screen.height")]),v._v("：浏览器窗口所在的屏幕的高度（单位像素）。")]),v._v(" "),t("li",[t("code",[v._v("Screen.width")]),v._v("：浏览器窗口所在的屏幕的宽度（单位像素）。")]),v._v(" "),t("li",[t("code",[v._v("Screen.availHeight")]),v._v("：浏览器窗口可用的屏幕高度（单位像素）。因为部分空间可能不可用，比如系统的任务栏或者 Mac 系统屏幕底部的 Dock 区，这个属性等于"),t("code",[v._v("height")]),v._v("减去那些被系统组件的高度。")]),v._v(" "),t("li",[t("code",[v._v("Screen.availWidth")]),v._v("：浏览器窗口可用的屏幕宽度（单位像素）。")])])])}),[],!1,null,null,null);_.default=e.exports}}]);