(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{624:function(e,t,v){"use strict";v.r(t);var _=v(5),a=Object(_.a)({},(function(){var e=this,t=e.$createElement,v=e._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"第-12-章-proxy"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第-12-章-proxy"}},[e._v("#")]),e._v(" 第 12 章_Proxy")]),e._v(" "),v("h2",{attrs:{id:"一、概述"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#一、概述"}},[e._v("#")]),e._v(" 一、概述")]),e._v(" "),v("ol",[v("li",[v("p",[v("strong",[e._v("Proxy")]),e._v(" 对象用于创建一个对象的代理，从而实现基本操作的拦截和自定义（如属性查找、赋值、枚举、函数调用等）。")]),e._v(" "),v("div",{staticClass:"language-javascript line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-javascript"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" p "),v("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("Proxy")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("target"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" handler"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[e._v("1")]),v("br")])]),v("ul",[v("li",[e._v("target\n"),v("ul",[v("li",[e._v("要使用 Proxy 包装的目标对象（可以是任何类型的对象，包括原生数组，函数，甚至另一个代理）。")])])]),e._v(" "),v("li",[e._v("handler\n"),v("ul",[v("li",[e._v("一个通常以函数作为属性的对象，各属性中的函数分别定义了在执行各种操作时代理 p 的行为。")])])])])]),e._v(" "),v("li",[v("p",[v("code",[e._v("Proxy.revocable()")]),e._v("方法")]),e._v(" "),v("ul",[v("li",[v("p",[e._v("用来创建一个可撤销的代理对象。")])]),e._v(" "),v("li",[v("div",{staticClass:"language-javascript line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-javascript"}},[v("code",[e._v("Proxy"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[e._v("revocable")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("target"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" handler"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[e._v("1")]),v("br")])])]),e._v(" "),v("li",[v("p",[e._v("返回一个包含了代理对象本身和它的撤销方法的可撤销 "),v("code",[e._v("Proxy")]),e._v(" 对象。")])])])])]),e._v(" "),v("h2",{attrs:{id:"二、handler-对象的方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#二、handler-对象的方法"}},[e._v("#")]),e._v(" 二、handler 对象的方法")]),e._v(" "),v("h3",{attrs:{id:"get"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#get"}},[e._v("#")]),e._v(" "),v("code",[e._v("get()")])]),e._v(" "),v("ol",[v("li",[e._v("用于拦截某个属性的读取操作。")]),e._v(" "),v("li",[e._v("接受三个参数，依次为目标对象、属性名和 proxy 实例本身。")]),e._v(" "),v("li",[e._v("可以返回任何值。")]),e._v(" "),v("li",[v("code",[e._v("get")]),e._v("方法可以继承。")])]),e._v(" "),v("h3",{attrs:{id:"set"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#set"}},[e._v("#")]),e._v(" "),v("code",[e._v("set()")])]),e._v(" "),v("ol",[v("li",[e._v("用来拦截某个属性的赋值操作。")]),e._v(" "),v("li",[e._v("接受四个参数，依次为目标对象、属性名、属性值和 Proxy 实例本身。")]),e._v(" "),v("li",[e._v("返回一个布尔值。")])]),e._v(" "),v("h3",{attrs:{id:"apply"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#apply"}},[e._v("#")]),e._v(" "),v("code",[e._v("apply()")])]),e._v(" "),v("ol",[v("li",[e._v("拦截函数的调用、"),v("code",[e._v("call")]),e._v("和"),v("code",[e._v("apply")]),e._v("操作。")]),e._v(" "),v("li",[e._v("可以接受三个参数，分别是目标对象、目标对象的上下文对象（"),v("code",[e._v("this")]),e._v("）和目标对象的参数数组。")]),e._v(" "),v("li",[e._v("可以返回任何值。")])]),e._v(" "),v("h3",{attrs:{id:"has"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#has"}},[e._v("#")]),e._v(" "),v("code",[e._v("has()")])]),e._v(" "),v("ol",[v("li",[e._v("用来拦截"),v("code",[e._v("HasProperty")]),e._v("操作，即判断对象是否具有某个属性时，这个方法会生效。典型的操作就是"),v("code",[e._v("in")]),e._v("运算符。")]),e._v(" "),v("li",[e._v("可以接受两个参数，分别是目标对象、需查询的属性名。")]),e._v(" "),v("li",[e._v("返回一个布尔值。")])]),e._v(" "),v("h3",{attrs:{id:"construct"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#construct"}},[e._v("#")]),e._v(" "),v("code",[e._v("construct()")])]),e._v(" "),v("ol",[v("li",[e._v("用于拦截"),v("code",[e._v("new")]),e._v("命令。")]),e._v(" "),v("li",[e._v("可以接受三个参数，分别是目标对象、构造函数的参数数组、创造实例对象时，"),v("code",[e._v("new")]),e._v("命令作用的构造函数。")]),e._v(" "),v("li",[e._v("返回的必须是一个对象，否则会报错。")])]),e._v(" "),v("h3",{attrs:{id:"deleteproperty"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#deleteproperty"}},[e._v("#")]),e._v(" "),v("code",[e._v("deleteProperty()")])]),e._v(" "),v("ol",[v("li",[e._v("用于拦截"),v("code",[e._v("delete")]),e._v("操作，如果这个方法抛出错误或者返回"),v("code",[e._v("false")]),e._v("，当前属性就无法被"),v("code",[e._v("delete")]),e._v("命令删除。")]),e._v(" "),v("li",[e._v("可以接受两个参数，分别是目标对象、待删除的属性名。")]),e._v(" "),v("li",[e._v("必须返回一个布尔值，表示该属性是否被成功删除。")])]),e._v(" "),v("h3",{attrs:{id:"defineproperty"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#defineproperty"}},[e._v("#")]),e._v(" "),v("code",[e._v("defineProperty()")])]),e._v(" "),v("ol",[v("li",[v("p",[e._v("用于拦截对象的 "),v("code",[e._v("Object.defineProperty()")]),e._v("操作。")])]),e._v(" "),v("li",[v("p",[e._v("可以接受三个参数，分别是目标对象、待检索其描述的属性名、待定义或修改的属性的描述符。")])]),e._v(" "),v("li",[v("p",[e._v("必须返回一个布尔值，表示定义该属性的操作成功与否。")])])]),e._v(" "),v("h3",{attrs:{id:"getownpropertydescriptor"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#getownpropertydescriptor"}},[e._v("#")]),e._v(" "),v("code",[e._v("getOwnPropertyDescriptor()")])]),e._v(" "),v("ol",[v("li",[v("p",[e._v("用于拦截对象的 "),v("code",[e._v("Object.getOwnPropertyDescriptor()")]),e._v("操作。")])]),e._v(" "),v("li",[v("p",[e._v("可以接受两个参数，分别是目标对象、返回属性名称的描述。")])]),e._v(" "),v("li",[v("p",[e._v("方法必须返回一个 object 或 "),v("code",[e._v("undefined")]),e._v("。")])])]),e._v(" "),v("h3",{attrs:{id:"getprototypeof"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#getprototypeof"}},[e._v("#")]),e._v(" "),v("code",[e._v("getPrototypeOf()")])]),e._v(" "),v("ol",[v("li",[e._v("用来拦截获取对象原型。\n"),v("ul",[v("li",[v("code",[e._v("Object.prototype.__proto__")])]),e._v(" "),v("li",[v("code",[e._v("Object.prototype.isPrototypeOf()")])]),e._v(" "),v("li",[v("code",[e._v("Object.getPrototypeOf()")])]),e._v(" "),v("li",[v("code",[e._v("Reflect.getPrototypeOf()")])]),e._v(" "),v("li",[v("code",[e._v("instanceof")])])])]),e._v(" "),v("li",[e._v("可以接受一个参数，目标对象。")]),e._v(" "),v("li",[e._v("返回值必须是一个对象或者 "),v("code",[e._v("null")]),e._v("。")])]),e._v(" "),v("h3",{attrs:{id:"isextensible"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#isextensible"}},[e._v("#")]),e._v(" "),v("code",[e._v("isExtensible()")])]),e._v(" "),v("ol",[v("li",[v("p",[e._v("用于拦截对象的"),v("code",[e._v("Object.isExtensible()")]),e._v("。")])]),e._v(" "),v("li",[v("p",[e._v("可以接受一个参数，目标对象。")])]),e._v(" "),v("li",[v("p",[e._v("必须返回一个 Boolean 值或可转换成 Boolean 的值。")])])]),e._v(" "),v("h3",{attrs:{id:"ownkeys"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#ownkeys"}},[e._v("#")]),e._v(" "),v("code",[e._v("ownKeys()")])]),e._v(" "),v("ol",[v("li",[v("p",[e._v("用来拦截对象自身属性的读取操作。")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("Object.getOwnPropertyNames()")])]),e._v(" "),v("li",[v("code",[e._v("Object.getOwnPropertySymbols()")])]),e._v(" "),v("li",[v("code",[e._v("Object.keys()")])]),e._v(" "),v("li",[v("code",[e._v("for...in")]),e._v("循环")])])]),e._v(" "),v("li",[v("p",[e._v("可以接受一个参数，目标对象。")])]),e._v(" "),v("li",[v("p",[e._v("必须返回一个可枚举对象.")])])]),e._v(" "),v("h3",{attrs:{id:"preventextensions"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#preventextensions"}},[e._v("#")]),e._v(" "),v("code",[e._v("preventExtensions()")])]),e._v(" "),v("ol",[v("li",[e._v("拦截"),v("code",[e._v("Object.preventExtensions()")]),e._v("。")]),e._v(" "),v("li",[e._v("可以接受一个参数，目标对象。")]),e._v(" "),v("li",[e._v("返回一个布尔值。")])]),e._v(" "),v("h3",{attrs:{id:"setprototypeof"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#setprototypeof"}},[e._v("#")]),e._v(" "),v("code",[e._v("setPrototypeOf()")])]),e._v(" "),v("ol",[v("li",[e._v("用来拦截"),v("code",[e._v("Object.setPrototypeOf()")]),e._v("方法。")]),e._v(" "),v("li",[e._v("可以接受两个参数，分别是目标对象、对象新原型或为"),v("code",[e._v("null")]),e._v("。")]),e._v(" "),v("li",[e._v("如果成功修改了"),v("code",[e._v("[[Prototype]]")]),e._v(", "),v("code",[e._v("setPrototypeOf")]),e._v(" 方法返回 "),v("code",[e._v("true")]),e._v(",否则返回 "),v("code",[e._v("false")]),e._v(".")])]),e._v(" "),v("h2",{attrs:{id:"三、this-问题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#三、this-问题"}},[e._v("#")]),e._v(" 三、this 问题")]),e._v(" "),v("ol",[v("li",[e._v("一旦"),v("code",[e._v("proxy")]),e._v("代理"),v("code",[e._v("target")]),e._v("，"),v("code",[e._v("target.xxx()")]),e._v("内部的"),v("code",[e._v("this")]),e._v("就是指向"),v("code",[e._v("proxy")]),e._v("，而不是"),v("code",[e._v("target")]),e._v("。")]),e._v(" "),v("li",[e._v("Proxy 拦截函数内部的"),v("code",[e._v("this")]),e._v("，指向的是"),v("code",[e._v("handler")]),e._v("对象。")])])])}),[],!1,null,null,null);t.default=a.exports}}]);