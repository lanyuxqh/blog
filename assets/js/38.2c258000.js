(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{604:function(_,v,t){"use strict";t.r(v);var e=t(5),i=Object(e.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h1",{attrs:{id:"grid-布局"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#grid-布局"}},[_._v("#")]),_._v(" Grid 布局")]),_._v(" "),t("h2",{attrs:{id:"_1、基本概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、基本概念"}},[_._v("#")]),_._v(" 1、基本概念")]),_._v(" "),t("p",[t("strong",[_._v("Grid 布局")]),_._v("： 网格布局（Grid）是最强大的 CSS 布局方案。它将网页划分成一个个网格，可以任意组合不同的网格，做出各种各样的布局。")]),_._v(" "),t("p",[_._v('采用网格布局的区域，称为"容器"（container）。容器内部采用网格定位的子元素，称为"项目"（item）。容器里面的水平区域称为"行"（row），垂直区域称为"列"（column）。行和列的交叉区域，称为"单元格"（cell）。划分网格的线，称为"网格线"（grid line），水平网格线划分出行，垂直网格线划分出列。')]),_._v(" "),t("p",[_._v("设为网格布局以后，容器子元素（项目）的"),t("code",[_._v("float")]),_._v("、"),t("code",[_._v("display: inline-block")]),_._v("、"),t("code",[_._v("display: table-cell")]),_._v("、"),t("code",[_._v("vertical-align")]),_._v("和"),t("code",[_._v("column-*")]),_._v("等设置都将失效。")]),_._v(" "),t("p",[_._v("display: grid // 指定一个容器采用网格布局。")]),_._v(" "),t("p",[_._v("display: inline-grid //")]),_._v(" "),t("h2",{attrs:{id:"_2、容器属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、容器属性"}},[_._v("#")]),_._v(" 2、容器属性")]),_._v(" "),t("ul",[t("li",[t("strong",[_._v("grid-template-columns")]),_._v("： 定义每一列的列宽\n"),t("ul",[t("li",[_._v("除了使用绝对单位，也可以使用百分比。")]),_._v(" "),t("li",[t("code",[_._v("repeat()")]),_._v("：简化重复的值\n"),t("ul",[t("li",[_._v("接受两个参数，第一个参数是重复的次数，第二个参数是所要重复的值。")])])]),_._v(" "),t("li",[t("code",[_._v("auto-fill")]),_._v("关键字表示自动填充")]),_._v(" "),t("li",[t("code",[_._v("fr")]),_._v(" 关键字表示比例关系")]),_._v(" "),t("li",[t("code",[_._v("minmax()")]),_._v("函数产生一个长度范围，表示长度就在这个范围之中\n"),t("ul",[t("li",[_._v("接受两个参数，分别为最小值和最大值")])])]),_._v(" "),t("li",[t("code",[_._v("auto")]),_._v("关键字表示由浏览器自己决定长度")]),_._v(" "),t("li",[_._v("使用方括号，指定每一根网格线的名字，方便以后的引用。")])])]),_._v(" "),t("li",[t("strong",[_._v("grid-template-rows")]),_._v("： 定义每一行的行高")]),_._v(" "),t("li",[t("strong",[_._v("grid-template-areas")]),_._v("： 定义区域\n"),t("ul",[t("li",[_._v("区域的命名会影响到网格线。每个区域的起始网格线，会自动命名为"),t("code",[_._v("区域名-start")]),_._v("，终止网格线自动命名为"),t("code",[_._v("区域名-end")])])])]),_._v(" "),t("li",[t("strong",[_._v("grid-template")]),_._v("： "),t("code",[_._v("grid-template-columns")]),_._v("、"),t("code",[_._v("grid-template-rows")]),_._v("和"),t("code",[_._v("grid-template-areas")]),_._v("这三个属性的合并简写形式")]),_._v(" "),t("li",[t("strong",[_._v("grid-auto-columns")]),_._v("： 设置浏览器自动创建的多余网格的列宽")]),_._v(" "),t("li",[t("strong",[_._v("grid-auto-rows")]),_._v("： 设置浏览器自动创建的多余网格的行高")]),_._v(" "),t("li",[t("strong",[_._v("grid-auto-flow")]),_._v("： 设置容器的子元素放置顺序\n"),t("ul",[t("li",[_._v('默认 row，即放置顺序是"先行后列"，即先填满第一行，再开始放入第二行')]),_._v(" "),t("li",[_._v("column，先列后行")]),_._v(" "),t("li",[_._v('row dense，表示"先行后列"，并且尽量填满空格')]),_._v(" "),t("li",[_._v('column dense，表示"先列后行"，并且尽量填满空格')])])]),_._v(" "),t("li",[t("strong",[_._v("grid")]),_._v("： "),t("code",[_._v("grid-template-rows")]),_._v("、"),t("code",[_._v("grid-template-columns")]),_._v("、"),t("code",[_._v("grid-template-areas")]),_._v("、 "),t("code",[_._v("grid-auto-rows")]),_._v("、"),t("code",[_._v("grid-auto-columns")]),_._v("、"),t("code",[_._v("grid-auto-flow")]),_._v("这六个属性的合并简写形式。")]),_._v(" "),t("li",[t("strong",[_._v("row-gap")]),_._v("： 设置行间距")]),_._v(" "),t("li",[t("strong",[_._v("column-gap")]),_._v("： 设置列间距")]),_._v(" "),t("li",[t("strong",[_._v("gap")]),_._v("： "),t("code",[_._v("column-gap")]),_._v("和"),t("code",[_._v("row-gap")]),_._v("的合并简写")]),_._v(" "),t("li",[t("strong",[_._v("justify-items")]),_._v("： 设置单元格内容的水平位置\n"),t("ul",[t("li",[_._v("start：对齐单元格的起始边缘")]),_._v(" "),t("li",[_._v("end：对齐单元格的结束边缘")]),_._v(" "),t("li",[_._v("center：单元格内部居中")]),_._v(" "),t("li",[_._v("stretch：拉伸，占满单元格的整个宽度（默认值）")])])]),_._v(" "),t("li",[t("strong",[_._v("align-items")]),_._v("： 设置单元格内容的垂直位置")]),_._v(" "),t("li",[t("strong",[_._v("place-items")]),_._v("： "),t("code",[_._v("align-items")]),_._v("属性和"),t("code",[_._v("justify-items")]),_._v("属性的合并简写形式")]),_._v(" "),t("li",[t("strong",[_._v("justify-content")]),_._v("： 整个内容区域在容器里面的水平位置\n"),t("ul",[t("li",[_._v("start：对齐容器的起始边框")]),_._v(" "),t("li",[_._v("end：对齐容器的结束边框")]),_._v(" "),t("li",[_._v("center：容器内部居中")]),_._v(" "),t("li",[_._v("stretch：项目大小没有指定时，拉伸占据整个网格容器")]),_._v(" "),t("li",[_._v("space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与容器边框的间隔大一倍")]),_._v(" "),t("li",[_._v("space-between：项目与项目的间隔相等，项目与容器边框之间没有间隔")]),_._v(" "),t("li",[_._v("space-evenly：项目与项目的间隔相等，项目与容器边框之间也是同样长度的间隔")])])]),_._v(" "),t("li",[t("strong",[_._v("align-content")]),_._v("： 整个内容区域的垂直位置")]),_._v(" "),t("li",[t("strong",[_._v("place-content")]),_._v("： "),t("code",[_._v("align-content")]),_._v("属性和"),t("code",[_._v("justify-content")]),_._v("属性的合并简写形式。")])]),_._v(" "),t("h2",{attrs:{id:"_3、项目属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、项目属性"}},[_._v("#")]),_._v(" 3、项目属性")]),_._v(" "),t("ul",[t("li",[_._v("**grid-column-start ， grid-column-end ， grid-row-start ， grid-row-end **： 指定项目的四个边框，分别定位在哪根网格线。\n"),t("ul",[t("li",[_._v("网格线数字")]),_._v(" "),t("li",[_._v("网格线名字")]),_._v(" "),t("li",[t("code",[_._v("span")]),_._v('关键字，表示"跨越"，即左右边框（上下边框）之间跨越多少个网格')])])]),_._v(" "),t("li",[_._v("**grid-column ， grid-row **： "),t("code",[_._v("grid-column-start")]),_._v("和"),t("code",[_._v("grid-column-end")]),_._v("的合并简写形式，"),t("code",[_._v("grid-row-start")]),_._v("属性和"),t("code",[_._v("grid-row-end")]),_._v("的合并简写形式")]),_._v(" "),t("li",[t("strong",[_._v("grid-area")]),_._v("： 指定项目放在哪一个区域")]),_._v(" "),t("li",[_._v("**justify-self ， align-self ， place-self **： 设置单元格内容的水平位置，跟"),t("code",[_._v("justify-items")]),_._v("属性的用法完全一致，但只作用于单个项目")])]),_._v(" "),t("h2",{attrs:{id:"_4、grid-布局与-flex-布局区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4、grid-布局与-flex-布局区别"}},[_._v("#")]),_._v(" 4、Grid 布局与 Flex 布局区别")]),_._v(" "),t("ul",[t("li",[_._v("相似：都可以指定容器内部多个项目的位置。")]),_._v(" "),t("li",[_._v('区别：Flex 布局是轴线布局，只能指定"项目"针对轴线的位置，可以看作是'),t("strong",[_._v("一维布局")]),_._v('。Grid 布局则是将容器划分成"行"和"列"，产生单元格，然后指定"项目所在"的单元格，可以看作是'),t("strong",[_._v("二维布局")]),_._v("。Grid 布局远比 Flex 布局强大。")])])])}),[],!1,null,null,null);v.default=i.exports}}]);