(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{626:function(s,t,a){"use strict";a.r(t);var e=a(5),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"第14章-promise"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第14章-promise"}},[s._v("#")]),s._v(" 第14章_Promise")]),s._v(" "),a("h2",{attrs:{id:"一、概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、概述"}},[s._v("#")]),s._v(" 一、概述")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("Promise 是异步编程的一种解决方案，比传统的解决方案——回调函数和事件——更合理和更强大。")])]),s._v(" "),a("li",[a("p",[s._v("Promise 是一个对象，从它可以获取异步操作的消息。Promise 提供统一的 API，各种异步操作都可以用同样的方法进行处理。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("Promise")]),s._v("对象有以下两个特点：")]),s._v(" "),a("ul",[a("li",[s._v("对象的状态不受外界影响。"),a("code",[s._v("Promise")]),s._v("对象代表一个异步操作，有三种状态："),a("code",[s._v("pending")]),s._v("（进行中）、"),a("code",[s._v("fulfilled")]),s._v("（已成功）和"),a("code",[s._v("rejected")]),s._v("（已失败）。")]),s._v(" "),a("li",[s._v("一旦状态改变，就不会再变，任何时候都可以得到这个结果。"),a("code",[s._v("Promise")]),s._v("对象的状态改变，只有两种可能：从"),a("code",[s._v("pending")]),s._v("变为"),a("code",[s._v("fulfilled")]),s._v("和从"),a("code",[s._v("pending")]),s._v("变为"),a("code",[s._v("rejected")]),s._v("。")])])]),s._v(" "),a("li",[a("p",[s._v("基本用法")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("Promise")]),s._v("对象是一个构造函数，用来生成"),a("code",[s._v("Promise")]),s._v("实例。")]),s._v(" "),a("li",[a("code",[s._v("Promise")]),s._v("构造函数接受一个函数作为参数，该函数的两个参数分别是"),a("code",[s._v("resolve")]),s._v("和"),a("code",[s._v("reject")]),s._v("。它们是两个函数，由 JavaScript 引擎提供，不用自己部署。")]),s._v(" "),a("li",[a("code",[s._v("resolve")]),s._v("函数的作用是，将"),a("code",[s._v("Promise")]),s._v("对象的状态从“未完成”变为“成功”（即从 pending 变为 fulfilled），在异步操作成功时调用，并将异步操作的结果，作为参数传递出去。")]),s._v(" "),a("li",[a("code",[s._v("reject")]),s._v("函数的作用是，将"),a("code",[s._v("Promise")]),s._v("对象的状态从“未完成”变为“失败”（即从 pending 变为 rejected），在异步操作失败时调用，并将异步操作报出的错误，作为参数传递出去。")])]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" promise "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Promise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("resolve"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" reject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ... some code")]),s._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* 异步操作成功 */")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("reject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])])])]),s._v(" "),a("h2",{attrs:{id:"二、promise-prototype-then"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、promise-prototype-then"}},[s._v("#")]),s._v(" 二、Promise.prototype.then()")]),s._v(" "),a("ol",[a("li",[s._v("作用是为 Promise 实例添加状态改变时的回调函数。")]),s._v(" "),a("li",[s._v("第一个参数是"),a("code",[s._v("resolved")]),s._v("状态的回调函数，第二个参数是"),a("code",[s._v("rejected")]),s._v("状态的回调函数，它们都是可选的。")]),s._v(" "),a("li",[s._v("返回的是一个新的"),a("code",[s._v("Promise")]),s._v("实例。")]),s._v(" "),a("li",[s._v("可以采用链式写法，即"),a("code",[s._v("then")]),s._v("方法后面再调用另一个"),a("code",[s._v("then")]),s._v("方法。")])]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[s._v("promise"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// success")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// failure")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h2",{attrs:{id:"三、promise-prototype-catch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、promise-prototype-catch"}},[s._v("#")]),s._v(" 三、Promise.prototype.catch()")]),s._v(" "),a("ol",[a("li",[s._v("作用是指定发生错误时的回调函数。是"),a("code",[s._v(".then(null, rejection)")]),s._v("或"),a("code",[s._v(".then(undefined, rejection)")]),s._v("的别名。")]),s._v(" "),a("li",[s._v("如果异步操作抛出错误，状态就会变为"),a("code",[s._v("rejected")]),s._v("，就会调用"),a("code",[s._v("catch()")]),s._v("方法指定的回调函数，处理这个错误。另外，"),a("code",[s._v("then()")]),s._v("方法指定的回调函数，如果运行中抛出错误，也会被"),a("code",[s._v("catch()")]),s._v("方法捕获。")])]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[s._v("promise\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// success")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("catch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("err")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// error")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h2",{attrs:{id:"四、promise-prototype-finally"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、promise-prototype-finally"}},[s._v("#")]),s._v(" 四、Promise.prototype.finally()")]),s._v(" "),a("ol",[a("li",[s._v("作用是指定不管 Promise 对象最后状态如何，都会执行的操作。")]),s._v(" "),a("li",[s._v("不管"),a("code",[s._v("promise")]),s._v("最后的状态，在执行完"),a("code",[s._v("then")]),s._v("或"),a("code",[s._v("catch")]),s._v("指定的回调函数以后，都会执行"),a("code",[s._v("finally")]),s._v("方法指定的回调函数。")])]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[s._v("promise\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("result")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("···"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("catch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("error")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("···"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("finally")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("···"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h2",{attrs:{id:"五、promise-all"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#五、promise-all"}},[s._v("#")]),s._v(" 五、Promise.all()")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("用于将多个 Promise 实例，包装成一个新的 Promise 实例。")])]),s._v(" "),a("li",[a("p",[s._v("接收一个promise的iterable类型。")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" p "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Promise"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("all")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("p1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" p2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" p3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// p的状态由p1、p2、p3决定，分成两种情况。")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//（1）只有p1、p2、p3的状态都变成fulfilled，p的状态才会变成fulfilled，此时p1、p2、p3的返回值组成一个数组，传递给p的回调函数。")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//（2）只要p1、p2、p3之中有一个被rejected，p的状态就变成rejected，此时第一个被reject的实例的返回值，会传递给p的回调函数。")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])])])]),s._v(" "),a("h2",{attrs:{id:"六、promise-race"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#六、promise-race"}},[s._v("#")]),s._v(" 六、Promise.race()")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("同样是将多个 Promise 实例，包装成一个新的 Promise 实例。")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" p "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Promise"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("race")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("p1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" p2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" p3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 只要p1、p2、p3之中有一个实例率先改变状态，p的状态就跟着改变。那个率先改变的 Promise 实例的返回值，就传递给p的回调函数。")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])])])]),s._v(" "),a("h2",{attrs:{id:"七、promise-allsettled"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#七、promise-allsettled"}},[s._v("#")]),s._v(" 七、Promise.allSettled()")]),s._v(" "),a("ol",[a("li",[s._v("用来确定一组异步操作是否都结束了（不管成功或失败）。")])]),s._v(" "),a("h2",{attrs:{id:"八、promise-any"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#八、promise-any"}},[s._v("#")]),s._v(" 八、Promise.any()")]),s._v(" "),a("ol",[a("li",[s._v("只要参数实例有一个变成"),a("code",[s._v("fulfilled")]),s._v("状态，包装实例就会变成"),a("code",[s._v("fulfilled")]),s._v("状态；如果所有参数实例都变成"),a("code",[s._v("rejected")]),s._v("状态，包装实例就会变成"),a("code",[s._v("rejected")]),s._v("状态。")])]),s._v(" "),a("h2",{attrs:{id:"九、promise-resolve"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#九、promise-resolve"}},[s._v("#")]),s._v(" 九、Promise.resolve()")]),s._v(" "),a("ol",[a("li",[s._v("返回一个解析过的"),a("code",[s._v("Promise")]),s._v("对象。")]),s._v(" "),a("li",[s._v("参数分成四种情况\n"),a("ul",[a("li",[s._v("如果参数是 Promise 实例，那么"),a("code",[s._v("Promise.resolve")]),s._v("将不做任何修改、原封不动地返回这个实例。")]),s._v(" "),a("li",[s._v("如果参数是一个"),a("code",[s._v("thenable")]),s._v("对象，"),a("code",[s._v("Promise.resolve()")]),s._v("方法会将这个对象转为 Promise 对象，然后就立即执行"),a("code",[s._v("thenable")]),s._v("对象的"),a("code",[s._v("then()")]),s._v("方法。")]),s._v(" "),a("li",[s._v("如果参数是一个原始值，或者是一个不具有"),a("code",[s._v("then()")]),s._v("方法的对象，则"),a("code",[s._v("Promise.resolve()")]),s._v("方法返回一个新的 Promise 对象，状态为"),a("code",[s._v("resolved")]),s._v("。")]),s._v(" "),a("li",[s._v("不带参数，直接返回一个"),a("code",[s._v("resolved")]),s._v("状态的 Promise 对象。")])])])]),s._v(" "),a("h2",{attrs:{id:"十、promise-reject"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#十、promise-reject"}},[s._v("#")]),s._v(" 十、Promise.reject()")]),s._v(" "),a("ol",[a("li",[s._v("返回一个新的 Promise 实例，该实例的状态为"),a("code",[s._v("rejected")]),s._v("。")])])])}),[],!1,null,null,null);t.default=n.exports}}]);