(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{597:function(s,t,e){"use strict";e.r(t);var a=e(5),_=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"css-预处理器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#css-预处理器"}},[s._v("#")]),s._v(" CSS 预处理器")]),s._v(" "),e("h2",{attrs:{id:"_1、基本概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、基本概念"}},[s._v("#")]),s._v(" 1、基本概念")]),s._v(" "),e("p",[e("strong",[s._v("CSS 缺点")]),s._v("： CSS 是一门非程序式语言，没有变量、函数、作用域等概念，代码冗余、不易维护和扩展、没有很好的计算能力。")]),s._v(" "),e("p",[e("strong",[s._v("CSS 预处理器")]),s._v("： 用一种专门的编程语言，进行 Web 页面样式设计，再通过编译器转化为正常的 CSS 文件，以供项目使用。")]),s._v(" "),e("p",[e("strong",[s._v("原理")]),s._v("： 预处理器包含一套自定义的语法及一个解析器，用户根据这些语法定义自己的样式规则，这些规则最终会通过解析器，编译生成对应的 css 文件。")]),s._v(" "),e("p",[e("strong",[s._v("优点")]),s._v("： 为 CSS 增加一些"),e("strong",[s._v("可编程")]),s._v("的特性，通过"),e("strong",[s._v("变量")]),s._v("、"),e("strong",[s._v("嵌套")]),s._v("、"),e("strong",[s._v("简单的程序逻辑")]),s._v("、"),e("strong",[s._v("计算")]),s._v("、"),e("strong",[s._v("函数")]),s._v("等特性，通过"),e("strong",[s._v("工程化")]),s._v("的手段让 CSS 的开发变得简单和可维护，提升开发效率。")]),s._v(" "),e("p",[e("strong",[s._v("主流")]),s._v("： Sass、Less、Stylus。")]),s._v(" "),e("p",[e("strong",[s._v("CSS 预处理器和后处理器")]),s._v("：")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("**预处理器，**如："),e("code",[s._v("sass")]),s._v("，"),e("code",[s._v("less")]),s._v("，"),e("code",[s._v("stylus")]),s._v("，为"),e("code",[s._v("css")]),s._v("增加一些编程特性，无需考虑浏览器的兼容问题，可以在"),e("code",[s._v("CSS")]),s._v("中使用变量，简单的逻辑程序，函数等在编程语言中的一些基本的性能，可以让"),e("code",[s._v("css")]),s._v("更加的简洁，增加适应性以及可读性，可维护性等。")])]),s._v(" "),e("li",[e("p",[e("strong",[s._v("后处理器，")]),s._v(" 如： "),e("code",[s._v("postCss")]),s._v("，通常是在完成的样式表中根据"),e("code",[s._v("css")]),s._v("规范处理"),e("code",[s._v("css")]),s._v("，让其更加有效。目前最常做的是给"),e("code",[s._v("css")]),s._v("属性添加浏览器私有前缀，实现跨浏览器兼容性的问题。")])])]),s._v(" "),e("h2",{attrs:{id:"_2、sass"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、sass"}},[s._v("#")]),s._v(" 2、Sass")]),s._v(" "),e("p",[s._v("Sass 是最早出现的 CSS 预处理语言，有着比 Less 更强大的功能。采用 Ruby 语言编写。")]),s._v(" "),e("h3",{attrs:{id:"_2-1-基本用法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-基本用法"}},[s._v("#")]),s._v(" 2.1 基本用法")]),s._v(" "),e("p",[e("strong",[s._v("注释")]),s._v('： 标准的 CSS 注释 /_ comment _/ ，会保留到编译后的文件；单行注释 // comment，只保留在 SASS 源文件中，编译后被省略；在/*后面加一个感叹号，表示这是"重要注释"，即使是压缩模式编译，也会保留这行注释，通常可以用于声明版权信息。')]),s._v(" "),e("p",[e("strong",[s._v("变量")]),s._v("： $ 声明变量，#{} 用于变量插值 #{$var}。")]),s._v(" "),e("p",[e("strong",[s._v("嵌套")]),s._v("： 选择器嵌套；"),e("code",[s._v("&")]),s._v(" 表示父选择器，常用于给现有选择器添加伪类或生成重复类名；属性也可以嵌套，比如 border-color 属性（border 后面必须加上冒号）。")]),s._v(" "),e("p",[e("strong",[s._v("混合")]),s._v("： 使用@mixin 命令，定义一个代码块，使用@include 命令，调用这个 mixin；可以指定参数和缺省值，使用的时候根据需要加入参数。")]),s._v(" "),e("p",[e("strong",[s._v("运算")]),s._v("： 允许在代码中使用算式，除法需要添加括号，运算要注意单位。")]),s._v(" "),e("p",[e("strong",[s._v("继承")]),s._v("： 使用@extend 命令，一个选择器继承另一个选择器，会继承包含该选择器的所有样式。")]),s._v(" "),e("p",[e("strong",[s._v("导入")]),s._v("： @import 命令，用来插入外部文件；sass 局部文件的文件名以下划线 _ 开头，sass 在编译时就不会将这个文件编译输出为 css，引入局部文件时，可以省略文件开头的下划线和"),e("code",[s._v(".scss")]),s._v("后缀。")]),s._v(" "),e("p",[e("strong",[s._v("颜色函数")]),s._v("： rgb("),e("em",[s._v("red")]),s._v(", "),e("em",[s._v("green")]),s._v(", "),e("em",[s._v("blue")]),s._v(")、rgba("),e("em",[s._v("red")]),s._v(", "),e("em",[s._v("green")]),s._v(", "),e("em",[s._v("blue")]),s._v(", "),e("em",[s._v("alpha")]),s._v(")；hsl("),e("em",[s._v("hue")]),s._v(", "),e("em",[s._v("saturation")]),s._v(", "),e("em",[s._v("lightness")]),s._v(")、hsla("),e("em",[s._v("hue")]),s._v(", "),e("em",[s._v("saturation")]),s._v(", "),e("em",[s._v("lightness")]),s._v(", "),e("em",[s._v("alpha")]),s._v(")；adjust-hue("),e("em",[s._v("$color")]),s._v(","),e("em",[s._v("hue")]),s._v(")、saturate("),e("em",[s._v("$color")]),s._v(","),e("em",[s._v("saturation")]),s._v(")/desaturate("),e("em",[s._v("$color")]),s._v(","),e("em",[s._v("saturation")]),s._v(")、lighten("),e("em",[s._v("$color")]),s._v(","),e("em",[s._v("lightness")]),s._v(")/darken("),e("em",[s._v("$color")]),s._v(","),e("em",[s._v("lightness")]),s._v(")、transparentize("),e("em",[s._v("$color")]),s._v(","),e("em",[s._v("alpha")]),s._v(")/opacify("),e("em",[s._v("$color")]),s._v(","),e("em",[s._v("alpha")]),s._v(")")]),s._v(" "),e("p",[e("strong",[s._v("数字函数")]),s._v("： abs("),e("em",[s._v("number")]),s._v(")、ceil("),e("em",[s._v("number")]),s._v(")、floor("),e("em",[s._v("number")]),s._v(")、round("),e("em",[s._v("number")]),s._v(")、max("),e("em",[s._v("number...")]),s._v(")、min("),e("em",[s._v("number...")]),s._v(")、percentage("),e("em",[s._v("number")]),s._v(")、random()")]),s._v(" "),e("p",[e("strong",[s._v("字符串函数")]),s._v("： to-lower-case("),e("em",[s._v("string")]),s._v(")、to-upper-case("),e("em",[s._v("string")]),s._v(")、str-length("),e("em",[s._v("string")]),s._v(")、str-index("),e("em",[s._v("string")]),s._v(", "),e("em",[s._v("substring")]),s._v(")、str-insert("),e("em",[s._v("string")]),s._v(", "),e("em",[s._v("insert")]),s._v(", "),e("em",[s._v("index")]),s._v(")")]),s._v(" "),e("p",[e("strong",[s._v("列表函数")]),s._v("： length("),e("em",[s._v("list")]),s._v(")、nth("),e("em",[s._v("list")]),s._v(", "),e("em",[s._v("n")]),s._v(")、index("),e("em",[s._v("list")]),s._v(", "),e("em",[s._v("value")]),s._v(")、append("),e("em",[s._v("list")]),s._v(", "),e("em",[s._v("value")]),s._v(", ["),e("em",[s._v("separator")]),s._v("])、join("),e("em",[s._v("list1")]),s._v(", "),e("em",[s._v("list2")]),s._v(", ["),e("em",[s._v("separator, bracketed")]),s._v("])、zip("),e("em",[s._v("lists")]),s._v(")")]),s._v(" "),e("p",[e("strong",[s._v("字典函数")]),s._v("： length("),e("em",[s._v("map")]),s._v(")、map-get("),e("em",[s._v("map")]),s._v(", "),e("em",[s._v("key")]),s._v(")、map-has-key("),e("em",[s._v("map")]),s._v(", "),e("em",[s._v("key")]),s._v(")、map-keys("),e("em",[s._v("map")]),s._v(")、map-values("),e("em",[s._v("map")]),s._v(")、map-merge("),e("em",[s._v("map1")]),s._v(", "),e("em",[s._v("map2")]),s._v(")、map-remove("),e("em",[s._v("map")]),s._v(", "),e("em",[s._v("keys...")]),s._v(")")]),s._v(" "),e("p",[e("strong",[s._v("自定义函数")]),s._v("： @function 名称(参数 1,参数 2,...) { ... @return ... }，@warn，@error")]),s._v(" "),e("p",[e("strong",[s._v("条件语句")]),s._v("： @if、@else if、@else")]),s._v(" "),e("p",[e("strong",[s._v("循环语句")]),s._v("： @for，@for $i from 1 through/to 10，through 会包含结束值，to 不会；@while，while $i > 0；@each，@each $item in $list。")]),s._v(" "),e("h3",{attrs:{id:"_2-2-scss"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-scss"}},[s._v("#")]),s._v(" 2.2 Scss")]),s._v(" "),e("p",[s._v("Sass 最初版本采用的是严格缩进的风格（不带大括号和分号），这一语法也导致一开始 Sass 并不太为开发者所接受。")]),s._v(" "),e("p",[s._v("Sass 从 V3 版本开始放弃了缩进式的风格，并完全兼容普通的 CSS 代码，也因此从第三代开始，Sass 也被称为 Scss。Sass 3 就是 Scss，是 Sassy CSS 的简写，它是 CSS3 语法的超集，也就是说所有有效的 CSS/CSS3 样式也同样适合于 Sass。")]),s._v(" "),e("p",[s._v("对现代编程来说，Sass 就是 Scss，也因此，Sass 现在的扩展名为"),e("code",[s._v(".scss")]),s._v("（如果是旧版本的 Sass，可能扩展名会为"),e("code",[s._v(".sass")]),s._v("）。")]),s._v(" "),e("h3",{attrs:{id:"_2-3-ruby-sass、node-sass、dart-sass"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-ruby-sass、node-sass、dart-sass"}},[s._v("#")]),s._v(" 2.3 ruby sass、node-sass、dart-sass")]),s._v(" "),e("p",[s._v("Sass 的 3 代编译器。")]),s._v(" "),e("p",[s._v("ruby sass：用 ruby 实现的，而 ruby 是一门解释型语言，所以前端开发想编译 sass 就需要在本地安装 ruby。Node.js 的出现推动了前端工程化的发展，而 Node.js 只支持 c++ 这种编译型语言的扩展包，ruby sass 就用不了，退出历史舞台。")]),s._v(" "),e("p",[s._v("node-sass：用 c++ 实现的，编译速度比 ruby sass 快很多，和 node 做了集成，安装的时候要和 node 版本对应，不然就会编译报错。支持 CSS 新特性的速度跟不上，社区中出现 dart-sass，慢慢退出历史舞台。")]),s._v(" "),e("p",[s._v("dart-sass：用 dart 实现的，提供的 dart-sass 的包是 js 的，编译速度上会比 node-sass 慢。优点在于对 css 的特性支持的全，而且因为是 js 包，安装很方便。官方推荐使用。")]),s._v(" "),e("h3",{attrs:{id:"_2-4-框架中使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-框架中使用"}},[s._v("#")]),s._v(" 2.4 框架中使用")]),s._v(" "),e("p",[s._v("vue：安装 sass 和 sass-loader")]),s._v(" "),e("p",[s._v("react：安装 sass 和 sass-loader")]),s._v(" "),e("h2",{attrs:{id:"_3、less"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3、less"}},[s._v("#")]),s._v(" 3、Less")]),s._v(" "),e("h3",{attrs:{id:"_3-1-基本用法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-基本用法"}},[s._v("#")]),s._v(" 3.1 基本用法")]),s._v(" "),e("p",[e("strong",[s._v("注释")]),s._v("： 多行注释保留，单行注释不被保留在编译生成的 CSS 中。")]),s._v(" "),e("p",[e("strong",[s._v("变量")]),s._v("： @ 声明变量，@{} 用于变量插值 @{var}；当一个变量被声明多次，会取最后一次的值，并从当前作用域往外寻找变量。")]),s._v(" "),e("p",[e("strong",[s._v("嵌套")]),s._v("： 选择器嵌套；"),e("code",[s._v("&")]),s._v(" 表示父选择器，常用于给现有选择器添加伪类或生成重复类名；")]),s._v(" "),e("p",[e("strong",[s._v("混合")]),s._v("： 将一组属性从一个规则集混入到另一个规则集的方式，xxx(参数)；"),e("code",[s._v("@arguments")]),s._v(" 变量包含了传入的所有参数。")]),s._v(" "),e("p",[e("strong",[s._v("运算")]),s._v("： 计算结果以操作数最左侧的单位类型为准。")]),s._v(" "),e("p",[e("strong",[s._v("继承")]),s._v("： 让多个选择器应用同一组属性，:extend(xxx)，精确匹配，:extend(xxx all) ，全部匹配。")]),s._v(" "),e("p",[e("strong",[s._v("导入")]),s._v("： import，@import 的位置可随意放置；reference 关键字，使用引入的 Less 文件，但不会编译它，"),e("code",[s._v('@import (reference) "bootstrap.less";')]),s._v(" ；once 关键字，相同的文件只会被导入一次，而随后的导入文件的重复代码都不会解析，"),e("code",[s._v('@import (once) "foo.less";')]),s._v("；multiple 关键字，允许导入多个同名文件，"),e("code",[s._v('@import (multiple) "foo.less";')]),s._v("。")]),s._v(" "),e("p",[e("strong",[s._v("避免编译")]),s._v("： ~' 值 '。")]),s._v(" "),e("p",[e("strong",[s._v("循环语句")]),s._v("： 递归调用自身，利用 when 跳出循环")]),s._v(" "),e("h3",{attrs:{id:"_3-2-sass-和-less"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-sass-和-less"}},[s._v("#")]),s._v(" 3.2 sass 和 less")]),s._v(" "),e("p",[e("strong",[s._v("相同")]),s._v("：")]),s._v(" "),e("ul",[e("li",[s._v("都是动态样式语言，对 CSS 赋予了动态语言的特性，如变量、继承、运算、函数等，提高开发效率。")])]),s._v(" "),e("p",[e("strong",[s._v("不同")]),s._v("：")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("Sass")]),s._v("的安装需要 Ruby 环境，是在服务端处理的； "),e("code",[s._v("Less")]),s._v("是需要引入 less.js 来处理 Less 代码输出 css 到浏览器，也可以在开发环节使用 Less，然后编译成 css 文件，直接放到项目中。")]),s._v(" "),e("li",[s._v("变量、混合、继承用法不同（本质一样）。")]),s._v(" "),e("li",[s._v("作用域遵循就近原则，内部顺序有些不同。")]),s._v(" "),e("li",[s._v("sass 支持条件语句和循环语句；less 不支持。")]),s._v(" "),e("li",[s._v("sass 提供 4 种输出选项：nested（默认，嵌套缩进）, compact（紧凑）, compressed（压缩） 和 expanded（展开的多行）；less 没有。")]),s._v(" "),e("li",[s._v("sass 导入以下划线_开头的文件，不会将其编译为 css 文件；less 引用外部文件和 css 中的@import 没什么差异。")]),s._v(" "),e("li",[e("code",[s._v("Sass")]),s._v("有工具库 Compass，"),e("code",[s._v("Less")]),s._v("有 UI 组件库 Bootstrap。")])]),s._v(" "),e("h3",{attrs:{id:"_3-3-框架中使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-框架中使用"}},[s._v("#")]),s._v(" 3.3 框架中使用")]),s._v(" "),e("p",[s._v("Vue：安装 less 和 less-loader")]),s._v(" "),e("p",[s._v("react：安装 less 和 less-loader，在 webpack.config.js 中配置（先将项目的代码本地 git 提交一下，npm run eject 暴露配置文件）。")]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" lessRegex "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("\\.less$")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" lessModuleRegex "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("\\.module\\.less$")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    test"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" lessRegex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      exclude"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" sassModuleRegex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        use"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("getStyleLoaders")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n          "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            importLoaders"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            sourceMap"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" isEnvProduction\n            "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" shouldUseSourceMap\n            "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" isEnvDevelopment"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            modules"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n              mode"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'icss'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n          "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n          "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'less-loader'")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n          sideEffects"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    test"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" lessModuleRegex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      use"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("getStyleLoaders")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          importLoaders"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n          sourceMap"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" isEnvProduction\n          "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" shouldUseSourceMap\n          "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" isEnvDevelopment"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n          modules"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            mode"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'local'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            getLocalIdent"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" getCSSModuleLocalIdent"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n          "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'less-loader'")]),s._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br")])]),e("h2",{attrs:{id:"_4、stylus"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4、stylus"}},[s._v("#")]),s._v(" 4、Stylus")]),s._v(" "),e("p",[s._v("冒号可选、分号可选逗号可选、括号可选、变量、插值、混合书写、算术、强制类型转换、动态导入、条件、迭代、嵌套选择、父级参考、变量函数调用、词法作用域、内置函数、内部语言函数、压缩可选、图像内联可选、可执行 "),e("code",[s._v("Stylus")]),s._v("、健壮的错误报告、单行和多行注释、"),e("code",[s._v("CSS")]),s._v(" 字面量、字符转义、"),e("code",[s._v("TextMate")]),s._v(" 捆绑等。")]),s._v(" "),e("h2",{attrs:{id:"_5、postcss"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5、postcss"}},[s._v("#")]),s._v(" 5、PostCSS")]),s._v(" "),e("p",[s._v("使用 JavaScript 插件来转换 CSS 的工具。你正常地写完了一句 CSS，然后 PostCSS 的插件就会自动分析你的代码并转换成你想要的格式。")]),s._v(" "),e("p",[s._v("可以编译尚未被浏览器广泛支持的先进的 CSS 语法，还可以自动为一些需要额外兼容的语法增加前缀。更强的是，由于 PostCss 有着强大的插件机制，支持各种各样的扩展，极大地强化了 CSS 的能力。")]),s._v(" "),e("p",[e("strong",[s._v("使用场景")]),s._v("：")]),s._v(" "),e("ul",[e("li",[s._v("提高 CSS 代码的可读性，PostCss 其实可以做类似预处理器能做的工作；")]),s._v(" "),e("li",[s._v("当我们的 CSS 代码需要适配低版本浏览器时，PostCss 的 "),e("a",{attrs:{href:"https://github.com/postcss/autoprefixer",target:"_blank",rel:"noopener noreferrer"}},[s._v("Autoprefixer"),e("OutboundLink")],1),s._v(" 插件可以帮助我们自动增加浏览器前缀；")]),s._v(" "),e("li",[s._v("允许我们编写面向未来的 CSS，PostCss 能够帮助我们编译 CSS next 代码；")])]),s._v(" "),e("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2021/jpeg/1500604/1615998491947-34e3237c-e54f-4b1a-8aeb-3c38655e1cb0.jpeg?x-oss-process=image%2Fresize%2Cw_1258%2Climit_0",alt:"img"}})])}),[],!1,null,null,null);t.default=_.exports}}]);