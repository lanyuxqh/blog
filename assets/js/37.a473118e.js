(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{597:function(_,v,l){"use strict";l.r(v);var e=l(5),t=Object(e.a)({},(function(){var _=this,v=_.$createElement,l=_._self._c||v;return l("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[l("h1",{attrs:{id:"flex-布局"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#flex-布局"}},[_._v("#")]),_._v(" Flex 布局")]),_._v(" "),l("h2",{attrs:{id:"_1、基本概念"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_1、基本概念"}},[_._v("#")]),_._v(" 1、基本概念")]),_._v(" "),l("p",[l("strong",[_._v("flex 布局")]),_._v('： 是 FlexibleBox 的缩写，意为"弹性布局"，用来为盒状模型提供最大的灵活性。任何一个容器都可以指定为 flex 布局；采用 flex 布局的元素，称为 flex 容器，它的所有子元素自动成为容器成员，称为 flex 项目。容器默认存在两根轴：水平的主轴（main axis）和垂直的交叉轴（cross axis），项目默认沿水平主轴排列。')]),_._v(" "),l("p",[_._v("给父盒子设为 flex 布局以后，子元素的 float、clear 和 vertical-align 属性将失效；")]),_._v(" "),l("p",[_._v("display: flex")]),_._v(" "),l("h2",{attrs:{id:"_2、容器属性"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_2、容器属性"}},[_._v("#")]),_._v(" 2、容器属性")]),_._v(" "),l("ul",[l("li",[l("strong",[_._v("flex-direction")]),_._v("：设置"),l("strong",[_._v("主轴")]),_._v("的方向\n"),l("ul",[l("li",[_._v("row（默认值）：主轴为水平方向，起点在左端。")]),_._v(" "),l("li",[_._v("row-reverse：主轴为水平方向，起点在右端。")]),_._v(" "),l("li",[_._v("column：主轴为垂直方向，起点在上沿。")]),_._v(" "),l("li",[_._v("column-reverse：主轴为垂直方向，起点在下沿。")])])]),_._v(" "),l("li",[l("strong",[_._v("flex-wrap")]),_._v("：设置子元素是否换行\n"),l("ul",[l("li",[_._v("nowrap（默认值）：不换行。")]),_._v(" "),l("li",[_._v("wrap：换行，第一行在上方。")]),_._v(" "),l("li",[_._v("wrap-reverse：换行，第一行在下方。")])])]),_._v(" "),l("li",[l("strong",[_._v("flex-flow")]),_._v("：复合属性，相当于同时设置了 flex-direction 和 flex-wrap（简写）\n"),l("ul",[l("li",[_._v("row nowrap（默认值）")])])]),_._v(" "),l("li",[l("strong",[_._v("justify-content")]),_._v("：设置"),l("strong",[_._v("主轴")]),_._v("上的子元素排列方式\n"),l("ul",[l("li",[_._v("flex-start（默认值）：左对齐")]),_._v(" "),l("li",[_._v("flex-end：右对齐")]),_._v(" "),l("li",[_._v("center：居中")]),_._v(" "),l("li",[_._v("space-between：两端对齐，项目之间的间隔都相等。")]),_._v(" "),l("li",[_._v("space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。")])])]),_._v(" "),l("li",[l("strong",[_._v("align-items")]),_._v("：设置"),l("strong",[_._v("交叉轴")]),_._v("上的子元素的排列方式（"),l("strong",[_._v("单行")]),_._v("）\n"),l("ul",[l("li",[_._v("flex-start：交叉轴的起点对齐。")]),_._v(" "),l("li",[_._v("flex-end：交叉轴的终点对齐。")]),_._v(" "),l("li",[_._v("center：交叉轴的中点对齐。")]),_._v(" "),l("li",[_._v("stretch（默认值）：如果项目未设置高度或设为 auto，将占满整个容器的高度。")]),_._v(" "),l("li",[_._v("baseline: 项目的第一行文字的基线对齐。")])])]),_._v(" "),l("li",[l("strong",[_._v("align-content")]),_._v("：设置"),l("strong",[_._v("交叉轴")]),_._v("上的子元素排列方式（"),l("strong",[_._v("多行/换行")]),_._v("），如果项目只有一根轴线，该属性不起作用。\n"),l("ul",[l("li",[_._v("flex-start：与交叉轴的起点对齐。")]),_._v(" "),l("li",[_._v("flex-end：与交叉轴的终点对齐。")]),_._v(" "),l("li",[_._v("center：与交叉轴的中点对齐。")]),_._v(" "),l("li",[_._v("space-between：与交叉轴两端对齐，轴线之间的间隔平均分布。")]),_._v(" "),l("li",[_._v("space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。")]),_._v(" "),l("li",[_._v("stretch（默认值）：轴线占满整个交叉轴。")])])])]),_._v(" "),l("h2",{attrs:{id:"_3、项目属性"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_3、项目属性"}},[_._v("#")]),_._v(" 3、项目属性")]),_._v(" "),l("ul",[l("li",[l("p",[l("strong",[_._v("order")]),_._v("：定义子项的排列顺序（前后顺序）")]),_._v(" "),l("ul",[l("li",[_._v("默认为 0，数值越小，排列越靠前")])])]),_._v(" "),l("li",[l("p",[l("strong",[_._v("flex-grow")]),_._v("：定义项目的放大比例")]),_._v(" "),l("ul",[l("li",[_._v("默认为 0，即如果存在剩余空间，也不放大")]),_._v(" "),l("li",[_._v("如果所有项目都为 1，则它们将等分剩余空间（如果有的话）。如果一个项目为 2，其他项目都为 1，则前者占据的剩余空间将比其他项多一倍。")])])]),_._v(" "),l("li",[l("p",[l("strong",[_._v("flex-shrink")]),_._v("：定义了项目的缩小比例")]),_._v(" "),l("ul",[l("li",[_._v("默认为 1，即如果空间不足，该项目将缩小")]),_._v(" "),l("li",[_._v("如果所有项目都为 1，当空间不足时，都将等比例缩小。如果一个项目为 0，其他项目都为 1，则空间不足时，前者不缩小。")])])]),_._v(" "),l("li",[l("p",[l("strong",[_._v("flex-basis")]),_._v("：定义了在分配多余空间之前，项目占据的主轴空间")]),_._v(" "),l("ul",[l("li",[_._v("默认为 auto，即项目的本来大小。")])])]),_._v(" "),l("li",[l("p",[l("strong",[_._v("flex")]),_._v("：复合属性，相当于同时设置了 flex-grow，flex-shrink，flex-basis（后两个属性可选）子项目分配剩余空间时所占份数")]),_._v(" "),l("ul",[l("li",[_._v("默认为 0 1 auto")]),_._v(" "),l("li",[_._v("该属性有两个快捷值："),l("code",[_._v("auto")]),_._v(" ("),l("code",[_._v("1 1 auto")]),_._v(") 和 none ("),l("code",[_._v("0 0 auto")]),_._v(")。")]),_._v(" "),l("li",[_._v("flex: 1（表示所有子项目将平分剩余空间）"),l("strong",[_._v("flex:1 === flex:1 1 0px")])])])]),_._v(" "),l("li",[l("p",[l("strong",[_._v("align-self")]),_._v("：允许单个项目有与其他项目不一样的对齐方式，可覆盖 align-items 属性。")]),_._v(" "),l("ul",[l("li",[l("p",[_._v("默认为 auto，表示继承父元素的 align-items 属性；如果没有父元素，则等同于 stretch")])]),_._v(" "),l("li",[l("p",[_._v("align-self: auto | flex-start | flex-end | center | baseline | stretch;")])])])])])])}),[],!1,null,null,null);v.default=t.exports}}]);